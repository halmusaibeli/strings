PROGRAM test_strings
%NOLOCKGROUP

%INCLUDE kunit.klh
%INCLUDE strings.klh

ROUTINE t_split_str : BOOLEAN
  VAR
    s : STRING[16]
    o : ARRAY[4] OF STRING[16]
  BEGIN
    s = 'one,two,three'
    split_str(s,',',o)

    RETURN(kunit_eq_str('one',o[1]) AND
      kunit_eq_str('two',o[2]) AND
      kunit_eq_str('three',o[3]) AND
      kunit_eq_str('',o[4]))
  END t_split_str

ROUTINE t_char_cnt : BOOLEAN
  BEGIN
    RETURN(kunit_eq_int(4, char_count('one,two,three,four,', ',')) AND
          kunit_eq_int(4,char_count('oneoneonetwoone', 'one')) AND
          kunit_eq_int(13,char_count('....F......F...', '.')) AND
          kunit_eq_int(2,char_count('....F......F...', 'F')) AND
          kunit_eq_int(0,char_count('....F......F...', '*')))
  END t_char_cnt

ROUTINE t_lstrip : BOOLEAN
  BEGIN
    RETURN(kunit_eq_str('test', lstrip('    test')) AND
      kunit_eq_str('test', lstrip('test')))
  END t_lstrip

ROUTINE t_rstrip : BOOLEAN
  BEGIN
    RETURN(kunit_eq_str('test', rstrip('test    ')) AND
      kunit_eq_str('  test', rstrip('  test  ')) AND
      kunit_eq_str('  test', rstrip('  test')))
  END t_rstrip

ROUTINE t_b_to_s : BOOLEAN
  BEGIN
    RETURN(kunit_eq_str('true', b_to_s(true)) AND
      kunit_eq_str('false', b_to_s(false)))
  END t_b_to_s

ROUTINE t_i_to_s : BOOLEAN
  BEGIN
    RETURN(kunit_eq_str('42', i_to_s(42)) AND
      kunit_eq_str('-42', i_to_s(-42)))
  END t_i_to_s

ROUTINE t_r_to_s : BOOLEAN
  BEGIN
    RETURN(kunit_eq_str('3.14', r_to_s(3.14)) AND
      kunit_eq_str('1.234', r_to_s(1.234)) AND
      kunit_eq_str('-3.14', r_to_s(-3.14)) AND
      kunit_eq_str('0.5', r_to_s(0.5)) AND
      kunit_eq_str('10.0', r_to_s(10.000)))
  END t_r_to_s

ROUTINE t_p_to_s : BOOLEAN
  VAR
    p : XYZWPR
  BEGIN
    p.x = 1.1
    p.y = 2.2
    p.z = 3.3
    p.w = 4.4
    p.p = 5.5
    p.r = 6.6

   RETURN(kunit_eq_str('X: 1.1 Y: 2.2 Z: 3.3' + chr(13) &
     + 'W: 4.4 P: 5.5 R: 6.6', p_to_s(p)))
  END t_p_to_s

ROUTINE t_joint2str : BOOLEAN
  VAR
    pose : JOINTPOS6
    arr : ARRAY[6] OF REAL
    status : INTEGER
    jointstr : STRING[50]
  BEGIN
    -- set jointpos type
    arr[1] = 10.0
    arr[2] = 30.0
    arr[3] = 190.0
    arr[4] = -90.0
    arr[5] = 0.0
    arr[6] = 180.0

    CNV_REL_JPOS(arr, pose, status)
    IF status <> 0 THEN
      WRITE TPDISPLAY(CR, 'problem in t_joint2str converting array.')
      RETURN(FALSE)
    ENDIF

    jointstr = joint_to_s(pose, ',')
    RETURN(kunit_eq_str('10.0,30.0,190.0,-90.0,0.0,180.0', jointstr))

  END t_joint2str

ROUTINE t_str2joint : BOOLEAN
  VAR
    jointstr : STRING[50]
    pose : JOINTPOS6
    arr : ARRAY[6] OF REAL
    status : INTEGER
  BEGIN
    jointstr = '10.0,30.0,190.0,-90.0,0.0,180.0'
    pose = s_to_joint(jointstr, ',')
    --convert to real array for validation
    CNV_JPOS_REL(pose, arr, status)
    IF (status <> 0) THEN
      WRITE TPDISPLAY(CR, 'problem in t_str2joint converting jointpose.')
      RETURN(FALSE)
    ENDIF

    RETURN(kunit_eq_r(10.0, arr[1]) AND kunit_eq_r(190.0, arr[3]) AND
          kunit_eq_r(-90.0, arr[4]) AND kunit_eq_r(0.0, arr[5]))
  END t_str2joint

ROUTINE t_pose_conf : BOOLEAN
  BEGIN
  END t_pose_conf

ROUTINE t_esc_quotes : BOOLEAN
  BEGIN
    RETURN(kunit_eq_str('\"test\"', esc_quotes('"test"')))
  END t_esc_quotes

ROUTINE t_splitStr
VAR
	o : ARRAY[4] OF STRING[16]
BEGIN
	split_str('Server: KHTTPD/0.1', ':', o)
	kunit_test('first one', kunit_eq_str('Server', o[1]))
	kunit_test('second one', kunit_eq_str(' KHTTPD/0.1', o[2]))

	split_str('fooBARbaz', 'BAR', o)
	kunit_test('first=foo', kunit_eq_str('foo', o[1]))
	kunit_test('second=baz', kunit_eq_str('baz', o[2]))
END t_splitStr

ROUTINE t_search_str : BOOLEAN
  VAR
    in_str : STRING[40]
  BEGIN
    in_str = 'The quick brown fox jumps over the lazy dog.'
    RETURN(search_str('quick brown', in_str) AND search_str('jumps', in_str) &
           AND (NOT search_str('grumpy cat', in_str)))
  END t_search_str

ROUTINE t_num_char : BOOLEAN
  BEGIN
    RETURN(charisnum('1') AND charisnum('9') AND charisnum('3') AND NOT charisnum('b'))
  END t_num_char

ROUTINE t_str2int : BOOLEAN
  BEGIN
    RETURN(kunit_eq_int(-3, s_to_i('-3')) AND kunit_eq_int(150, s_to_i('150')) &
           AND kunit_eq_int(876524, s_to_i('876524')) AND kunit_eq_int(3, s_to_i('3.14')))
  END t_str2int

ROUTINE t_str2real : BOOLEAN
  BEGIN
    RETURN(kunit_eq_r(-3.14, s_to_r('-3.14')) AND kunit_eq_r(3.14, s_to_r('3.14')))
  END t_str2real

ROUTINE t_str2rarr : BOOLEAN
  VAR
    rstr : STRING[90]
    r_arr : ARRAY[18] OF REAL
    b : BOOLEAN
  BEGIN
    rstr = '3.21,1.09,5.5,6.00,1.111,8,2.718,3.14159,6.02,111.123'
    rstr = rstr + ',-6.38,1E5,6.626E1,1.618,2,3,9.81,1.0'
    s_to_r_arr(rstr, ',', r_arr)

    RETURN(kunit_eq_r(3.21, r_arr[1]) AND kunit_eq_r(5.5, r_arr[3]) AND
          kunit_eq_r(3.14159, r_arr[8]) AND kunit_eq_r(-6.38, r_arr[11]) AND
          kunit_eq_r(6.626E1, r_arr[13]) AND kunit_eq_r(1.0, r_arr[18]))
  END t_str2rarr

-- **** TESTS BELOW MANIPULATE REGISTERS!!!
ROUTINE t_numreg2s : BOOLEAN
  VAR
    reg_no : INTEGER
    value : INTEGER
    v_str : STRING[5]
    status : INTEGER
  BEGIN
    reg_no = 10
    value = 2048
    --convert value to string
    v_str = i_to_s(value)
    -- set register
    SET_INT_REG(reg_no, value, status)
    --retrieve numreg as string
    -- and compare
    RETURN(kunit_eq_str(i_to_s(value), numreg_to_s(reg_no)))
  END t_numreg2s

ROUTINE t_posreg2s : BOOLEAN
  VAR
    reg_no : INTEGER
    expected : XYZWPREXT
    uframe : INTEGER
    utool : INTEGER
    STATUS :INTEGER
    conf_str : STRING[25]
  BEGIN
    --reg no
    reg_no = 80
    --store frame info
    uframe = $MNUFRAMENUM[1]
    utool = $MNUTOOLNUM[1]
    --set position
    expected.x = 10.0
    expected.y = 30.0
    expected.z = 190.0
    expected.w = -90.0
    expected.p = 0.0
    expected.r = 180.0
    conf_str = 'F U T, 0, 0, 0'
    --convert to config type
    CNV_STR_CONF(conf_str, expected.config_data, STATUS)
    IF (status <> 0) THEN
      WRITE TPDISPLAY(CR, 'problem in t_posreg2s with config str.')
      RETURN(FALSE)
    ENDIF
    -- set pos reg
    SET_POS_REG(reg_no, (expected), STATUS, 1)
    IF (status <> 0) THEN
      WRITE TPDISPLAY(CR, 'problem in t_posreg2s setting posreg')
      RETURN(FALSE)
    ENDIF
    --compare expected to retrieved
    RETURN(kunit_eq_str(p_to_s_conf(expected, 1, uframe, utool), &
           posreg_to_s(reg_no, 1)))
  END t_posreg2s



BEGIN
  kunit_test('split_str()', t_split_str)
  kunit_test('char_count()', t_char_cnt)
  kunit_test('lstrip()', t_lstrip)
  kunit_test('rstrip()', t_rstrip)
  kunit_test('b_to_s()', t_b_to_s)
  kunit_test('i_to_s()', t_i_to_s)
  kunit_test('r_to_s()', t_r_to_s)
  kunit_test('p_to_s()', t_p_to_s)
  kunit_test('joint2str()',t_joint2str)
  kunit_test('str2joint()',t_str2joint)
  kunit_test('esc_quotes()', t_esc_quotes)
  kunit_test('search_str()',t_search_str)
  kunit_test('number_char()',t_num_char)
  kunit_test('str2int()',t_str2int)
  kunit_test('str2real()',t_str2real)
  kunit_test('real_array_from_str()',t_str2rarr)
  kunit_test('numreg_to_str', t_numreg2s)
  kunit_test('posreg_to_str', t_posreg2s)

  kunit_done
END test_strings
